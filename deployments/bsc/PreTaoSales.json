{
  "address": "0xbC9072B1c6A1120810Ccb9b2917C64a3740F06C5",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "activator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "SaleEnded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "activator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "SaleStarted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "approver",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "seller",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "string",
          "name": "message",
          "type": "string"
        }
      ],
      "name": "SellerApproval",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newBuyer_",
          "type": "address"
        }
      ],
      "name": "approveBuyer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "newBuyers_",
          "type": "address[]"
        }
      ],
      "name": "approveBuyers",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "approvedBuyers",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "busd",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountPaid_",
          "type": "uint256"
        }
      ],
      "name": "buypTao",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "pTao_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "busd_",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "pTaoPrice_",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "saleProceedsAddress_",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "initialized",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pTao",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pTaoPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newpTaoPrice_",
          "type": "uint256"
        }
      ],
      "name": "setpTaoPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenToWithdraw_",
          "type": "address"
        }
      ],
      "name": "withdrawTokens",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x996796672f7006841528d799417908ff5feda03fc32fbc05e98b2b98647234eb",
  "receipt": {
    "to": null,
    "from": "0xcc77159E0C7ca174672a84794Dfed8AA2E52c072",
    "contractAddress": "0xbC9072B1c6A1120810Ccb9b2917C64a3740F06C5",
    "transactionIndex": 382,
    "gasUsed": "802023",
    "logsBloom": "0x
    "blockHash": "0xafcbd10d73beea607185398f4512af2fe9537cc4ced0d4ba6a17e9f63a6bc8f7",
    "transactionHash": "0x996796672f7006841528d799417908ff5feda03fc32fbc05e98b2b98647234eb",
    "logs": [
      {
        "transactionIndex": 382,
        "blockNumber": 6988495,
        "transactionHash": "0x996796672f7006841528d799417908ff5feda03fc32fbc05e98b2b98647234eb",
        "address": "0xbC9072B1c6A1120810Ccb9b2917C64a3740F06C5",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000cc77159e0c7ca174672a84794dfed8aa2e52c072"
        ],
        "data": "0x",
        "logIndex": 992,
        "blockHash": "0xafcbd10d73beea607185398f4512af2fe9537cc4ced0d4ba6a17e9f63a6bc8f7"
      }
    ],
    "blockNumber": 6988495,
    "cumulativeGasUsed": "41200019",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "solcInputHash": "d36f4ef78a162462663a2c0a6d633959",
  "metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"activator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"SaleEnded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"activator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"SaleStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"string\",\"name\":\"message\",\"type\":\"string\"}],\"name\":\"SellerApproval\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newBuyer_\",\"type\":\"address\"}],\"name\":\"approveBuyer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"newBuyers_\",\"type\":\"address[]\"}],\"name\":\"approveBuyers\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"approvedBuyers\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"busd\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountPaid_\",\"type\":\"uint256\"}],\"name\":\"buypTao\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pTao_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"busd_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"pTaoPrice_\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"saleProceedsAddress_\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pTao\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pTaoPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newpTaoPrice_\",\"type\":\"uint256\"}],\"name\":\"setpTaoPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenToWithdraw_\",\"type\":\"address\"}],\"name\":\"withdrawTokens\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/vested/PreTaoSales.sol\":\"PreTaoSales\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/vested/PreTaoSales.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0-or-later\\r\\npragma solidity 0.7.5;\\r\\n\\r\\nlibrary SafeMath {\\r\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        uint256 c = a + b;\\r\\n        require(c >= a, \\\"SafeMath: addition overflow\\\");\\r\\n\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        return sub(a, b, \\\"SafeMath: subtraction overflow\\\");\\r\\n    }\\r\\n\\r\\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\r\\n        require(b <= a, errorMessage);\\r\\n        uint256 c = a - b;\\r\\n\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        if (a == 0) {\\r\\n            return 0;\\r\\n        }\\r\\n\\r\\n        uint256 c = a * b;\\r\\n        require(c / a == b, \\\"SafeMath: multiplication overflow\\\");\\r\\n\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        return div(a, b, \\\"SafeMath: division by zero\\\");\\r\\n    }\\r\\n\\r\\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\r\\n        require(b > 0, errorMessage);\\r\\n        uint256 c = a / b;\\r\\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\\r\\n\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        return mod(a, b, \\\"SafeMath: modulo by zero\\\");\\r\\n    }\\r\\n\\r\\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\r\\n        require(b != 0, errorMessage);\\r\\n        return a % b;\\r\\n    }\\r\\n\\r\\n    function sqrrt(uint256 a) internal pure returns (uint c) {\\r\\n        if (a > 3) {\\r\\n            c = a;\\r\\n            uint b = add( div( a, 2), 1 );\\r\\n            while (b < c) {\\r\\n                c = b;\\r\\n                b = div( add( div( a, b ), b), 2 );\\r\\n            }\\r\\n        } else if (a != 0) {\\r\\n            c = 1;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function percentageAmount( uint256 total_, uint8 percentage_ ) internal pure returns ( uint256 percentAmount_ ) {\\r\\n        return div( mul( total_, percentage_ ), 1000 );\\r\\n    }\\r\\n\\r\\n    function percentageOfTotal( uint256 part_, uint256 total_ ) internal pure returns ( uint256 percent_ ) {\\r\\n        return div( mul(part_, 100) , total_ );\\r\\n    }\\r\\n\\r\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        // (a + b) / 2 can overflow, so we distribute\\r\\n        return (a / 2) + (b / 2) + ((a % 2 + b % 2) / 2);\\r\\n    }\\r\\n\\r\\n    function substractPercentage( uint256 total_, uint8 percentageToSub_ ) internal pure returns ( uint256 result_ ) {\\r\\n        return sub( total_, div( mul( total_, percentageToSub_ ), 1000 ) );\\r\\n    }\\r\\n\\r\\n    function quadraticPricing( uint256 payment_, uint256 multiplier_ ) internal pure returns (uint256) {\\r\\n        return sqrrt( mul( multiplier_, payment_ ) );\\r\\n    }\\r\\n\\r\\n    function bondingCurve( uint256 supply_, uint256 multiplier_ ) internal pure returns (uint256) {\\r\\n        return mul( multiplier_, supply_ );\\r\\n    }\\r\\n}\\r\\n\\r\\nlibrary Context {\\r\\n    function _msgSender() internal view returns (address payable) {\\r\\n        return msg.sender;\\r\\n    }\\r\\n\\r\\n    function _msgData() internal view returns (bytes memory) {\\r\\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\r\\n        return msg.data;\\r\\n    }\\r\\n}\\r\\n\\r\\ncontract Ownable {\\r\\n\\r\\n    address internal _owner;\\r\\n\\r\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\r\\n\\r\\n    constructor () {\\r\\n        address msgSender = Context._msgSender();\\r\\n        _owner = msgSender;\\r\\n        emit OwnershipTransferred(address(0), msgSender);\\r\\n    }\\r\\n\\r\\n    function owner() public view returns (address) {\\r\\n        return _owner;\\r\\n    }\\r\\n\\r\\n    modifier onlyOwner() {\\r\\n        require(_owner == Context._msgSender(), \\\"Ownable: caller is not the owner\\\");\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    function renounceOwnership() public virtual onlyOwner {\\r\\n        emit OwnershipTransferred(_owner, address(0));\\r\\n        _owner = address(0);\\r\\n    }\\r\\n\\r\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\r\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\r\\n        emit OwnershipTransferred(_owner, newOwner);\\r\\n        _owner = newOwner;\\r\\n    }\\r\\n}\\r\\n\\r\\ninterface IERC20 {\\r\\n  function totalSupply() external view returns (uint256);\\r\\n\\r\\n  function balanceOf(address account) external view returns (uint256);\\r\\n\\r\\n  function transfer(address recipient, uint256 amount) external returns (bool);\\r\\n\\r\\n  function allowance(address owner, address spender) external view returns (uint256);\\r\\n\\r\\n  function approve(address spender, uint256 amount) external returns (bool);\\r\\n\\r\\n  function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\\r\\n\\r\\n  event Transfer(address indexed from, address indexed to, uint256 value);\\r\\n\\r\\n  event Approval(address indexed owner, address indexed spender, uint256 value);\\r\\n}\\r\\n\\r\\nlibrary Address {\\r\\n\\r\\n    function isContract(address account) internal view returns (bool) {\\r\\n        // This method relies in extcodesize, which returns 0 for contracts in\\r\\n        // construction, since the code is only stored at the end of the\\r\\n        // constructor execution.\\r\\n\\r\\n        uint256 size;\\r\\n        // solhint-disable-next-line no-inline-assembly\\r\\n        assembly { size := extcodesize(account) }\\r\\n        return size > 0;\\r\\n    }\\r\\n\\r\\n    function sendValue(address payable recipient, uint256 amount) internal {\\r\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\r\\n\\r\\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\\r\\n        (bool success, ) = recipient.call{ value: amount }(\\\"\\\");\\r\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\r\\n    }\\r\\n\\r\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\r\\n      return functionCall(target, data, \\\"Address: low-level call failed\\\");\\r\\n    }\\r\\n\\r\\n    function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\\r\\n        return _functionCallWithValue(target, data, 0, errorMessage);\\r\\n    }\\r\\n\\r\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\r\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\r\\n    }\\r\\n\\r\\n    function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {\\r\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\r\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\r\\n\\r\\n        (bool success, bytes memory returndata) = target.call{ value: value }(data);\\r\\n        return _verifyCallResult(success, returndata, errorMessage);\\r\\n    }\\r\\n\\r\\n    function _functionCallWithValue(address target, bytes memory data, uint256 weiValue, string memory errorMessage) private returns (bytes memory) {\\r\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\r\\n\\r\\n        (bool success, bytes memory returndata) = target.call{ value: weiValue }(data);\\r\\n        if (success) {\\r\\n            return returndata;\\r\\n        } else {\\r\\n            if (returndata.length > 0) {\\r\\n                assembly {\\r\\n                    let returndata_size := mload(returndata)\\r\\n                    revert(add(32, returndata), returndata_size)\\r\\n                }\\r\\n            } else {\\r\\n                revert(errorMessage);\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\r\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\r\\n    }\\r\\n\\r\\n    function functionStaticCall(address target, bytes memory data, string memory errorMessage) internal view returns (bytes memory) {\\r\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\r\\n\\r\\n        // solhint-disable-next-line avoid-low-level-calls\\r\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\r\\n        return _verifyCallResult(success, returndata, errorMessage);\\r\\n    }\\r\\n\\r\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\r\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\r\\n    }\\r\\n\\r\\n    function functionDelegateCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\\r\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\r\\n\\r\\n        // solhint-disable-next-line avoid-low-level-calls\\r\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\r\\n        return _verifyCallResult(success, returndata, errorMessage);\\r\\n    }\\r\\n\\r\\n    function _verifyCallResult(bool success, bytes memory returndata, string memory errorMessage) private pure returns(bytes memory) {\\r\\n        if (success) {\\r\\n            return returndata;\\r\\n        } else {\\r\\n            if (returndata.length > 0) {\\r\\n                assembly {\\r\\n                    let returndata_size := mload(returndata)\\r\\n                    revert(add(32, returndata), returndata_size)\\r\\n                }\\r\\n            } else {\\r\\n                revert(errorMessage);\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function addressToString(address _address) internal pure returns(string memory) {\\r\\n        bytes32 _bytes = bytes32(uint256(_address));\\r\\n        bytes memory HEX = \\\"0123456789abcdef\\\";\\r\\n        bytes memory _addr = new bytes(42);\\r\\n\\r\\n        _addr[0] = '0';\\r\\n        _addr[1] = 'x';\\r\\n\\r\\n        for(uint256 i = 0; i < 20; i++) {\\r\\n            _addr[2+i*2] = HEX[uint8(_bytes[i + 12] >> 4)];\\r\\n            _addr[3+i*2] = HEX[uint8(_bytes[i + 12] & 0x0f)];\\r\\n        }\\r\\n\\r\\n        return string(_addr);\\r\\n\\r\\n    }\\r\\n}\\r\\n\\r\\nlibrary SafeERC20 {\\r\\n    using SafeMath for uint256;\\r\\n    using Address for address;\\r\\n\\r\\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\\r\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\r\\n    }\\r\\n\\r\\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\\r\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\r\\n    }\\r\\n\\r\\n    function safeApprove(IERC20 token, address spender, uint256 value) internal {\\r\\n        require((value == 0) || (token.allowance(address(this), spender) == 0),\\r\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\r\\n        );\\r\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\r\\n    }\\r\\n\\r\\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\r\\n        uint256 newAllowance = token.allowance(address(this), spender).add(value);\\r\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\r\\n    }\\r\\n\\r\\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\r\\n        uint256 newAllowance = token.allowance(address(this), spender).sub(value, \\\"SafeERC20: decreased allowance below zero\\\");\\r\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\r\\n    }\\r\\n\\r\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\r\\n\\r\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\r\\n        if (returndata.length > 0) { // Return data is optional\\r\\n            // solhint-disable-next-line max-line-length\\r\\n            require(abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\\r\\ncontract PreTaoSales is Ownable {\\r\\n\\r\\n  using SafeMath for uint256;\\r\\n  using SafeERC20 for IERC20;\\r\\n\\r\\n  event SaleStarted( address indexed activator, uint256 timestamp );\\r\\n  event SaleEnded( address indexed activator, uint256 timestamp );\\r\\n  event SellerApproval( address indexed approver, address indexed seller, string indexed message );\\r\\n\\r\\n  IERC20 public busd;\\r\\n\\r\\n  IERC20 public pTao;\\r\\n\\r\\n  address private _saleProceedsAddress;\\r\\n\\r\\n  uint256 public pTaoPrice;\\r\\n\\r\\n  bool public initialized;\\r\\n\\r\\n  mapping( address => bool ) public approvedBuyers;\\r\\n\\r\\n  constructor() {}\\r\\n\\r\\n  function initialize(\\r\\n    address pTao_,\\r\\n    address busd_,\\r\\n    uint256 pTaoPrice_,\\r\\n    address saleProceedsAddress_\\r\\n  ) external onlyOwner {\\r\\n    require( !initialized );\\r\\n    pTao = IERC20( pTao_ );\\r\\n    busd = IERC20( busd_ );\\r\\n    pTaoPrice = pTaoPrice_;\\r\\n    _saleProceedsAddress = saleProceedsAddress_;\\r\\n    initialized = true;\\r\\n  }\\r\\n\\r\\n  function setpTaoPrice( uint256 newpTaoPrice_ ) external onlyOwner() returns ( uint256 ) {\\r\\n    pTaoPrice = newpTaoPrice_;\\r\\n    return pTaoPrice;\\r\\n  }\\r\\n\\r\\n  function _approveBuyer( address newBuyer_ ) internal returns ( bool ) {\\r\\n    approvedBuyers[newBuyer_] = true;\\r\\n    return approvedBuyers[newBuyer_];\\r\\n  }\\r\\n\\r\\n  function approveBuyer( address newBuyer_ ) external onlyOwner() returns ( bool ) {\\r\\n    return _approveBuyer( newBuyer_ );\\r\\n  }\\r\\n\\r\\n  function approveBuyers( address[] calldata newBuyers_ ) external onlyOwner() returns ( uint256 ) {\\r\\n    for( uint256 iteration_ = 0; newBuyers_.length > iteration_; iteration_++ ) {\\r\\n      _approveBuyer( newBuyers_[iteration_] );\\r\\n    }\\r\\n    return newBuyers_.length;\\r\\n  }\\r\\n\\r\\n  function _calculateAmountPurchased( uint256 amountPaid_ ) internal returns ( uint256 ) {\\r\\n    return amountPaid_.mul( pTaoPrice );\\r\\n  }\\r\\n\\r\\n  function buypTao( uint256 amountPaid_ ) external returns ( bool ) {\\r\\n    require( approvedBuyers[msg.sender], \\\"Buyer not approved.\\\" );\\r\\n    uint256 pTaoAmountPurchased_ = _calculateAmountPurchased( amountPaid_ );\\r\\n    busd.safeTransferFrom( msg.sender, _saleProceedsAddress, amountPaid_ );\\r\\n    pTao.safeTransfer( msg.sender, pTaoAmountPurchased_ );\\r\\n    return true;\\r\\n  }\\r\\n\\r\\n  function withdrawTokens( address tokenToWithdraw_ ) external onlyOwner() returns ( bool ) {\\r\\n    IERC20( tokenToWithdraw_ ).safeTransfer( msg.sender, IERC20( tokenToWithdraw_ ).balanceOf( address( this ) ) );\\r\\n    return true;\\r\\n  }\\r\\n}\\r\\n\",\"keccak256\":\"0x85b13067f707c7c9e2a7aff183003cd53759f5c7ae4e672939bf602f97eb9010\",\"license\":\"AGPL-3.0-or-later\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50600061002561007460201b6108801760201c565b600080546001600160a01b0319166001600160a01b0383169081178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350610078565b3390565b610d1c806100876000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c806349df728c1161008c578063a5f523d411610066578063a5f523d41461023c578063be20309414610262578063c3664cdc1461029e578063f2fde38b146102bb576100ea565b806349df728c14610204578063715018a61461022a5780638da5cb5b14610234576100ea565b80633ca5b234116100c85780633ca5b2341461015e57806340edcbdd1461016657806341c91cb51461018c578063467d5fcb146101fc576100ea565b80630b2772a4146100ef578063158ef93e146101135780631d07b0961461012f575b600080fd5b6100f76102e1565b604080516001600160a01b039092168252519081900360200190f35b61011b6102f0565b604080519115158252519081900360200190f35b61014c6004803603602081101561014557600080fd5b50356102f9565b60408051918252519081900360200190f35b6100f761035c565b61011b6004803603602081101561017c57600080fd5b50356001600160a01b031661036b565b61014c600480360360208110156101a257600080fd5b8101906020810181356401000000008111156101bd57600080fd5b8201836020820111156101cf57600080fd5b803590602001918460208302840111640100000000831117156101f157600080fd5b509092509050610380565b61014c61041d565b61011b6004803603602081101561021a57600080fd5b50356001600160a01b0316610423565b610232610513565b005b6100f76105b5565b61011b6004803603602081101561025257600080fd5b50356001600160a01b03166105c4565b6102326004803603608081101561027857600080fd5b506001600160a01b03813581169160208101358216916040820135916060013516610627565b61011b600480360360208110156102b457600080fd5b50356106e1565b610232600480360360208110156102d157600080fd5b50356001600160a01b0316610788565b6002546001600160a01b031681565b60055460ff1681565b6000610303610880565b6000546001600160a01b03908116911614610353576040805162461bcd60e51b81526020600482018190526024820152600080516020610c9d833981519152604482015290519081900360640190fd5b50600481905590565b6001546001600160a01b031681565b60066020526000908152604090205460ff1681565b600061038a610880565b6000546001600160a01b039081169116146103da576040805162461bcd60e51b81526020600482018190526024820152600080516020610c9d833981519152604482015290519081900360640190fd5b60005b80831115610412576104098484838181106103f457fe5b905060200201356001600160a01b0316610884565b506001016103dd565b508190505b92915050565b60045481565b600061042d610880565b6000546001600160a01b0390811691161461047d576040805162461bcd60e51b81526020600482018190526024820152600080516020610c9d833981519152604482015290519081900360640190fd5b61050b33836001600160a01b03166370a08231306040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b1580156104ce57600080fd5b505afa1580156104e2573d6000803e3d6000fd5b505050506040513d60208110156104f857600080fd5b50516001600160a01b03851691906108ae565b506001919050565b61051b610880565b6000546001600160a01b0390811691161461056b576040805162461bcd60e51b81526020600482018190526024820152600080516020610c9d833981519152604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031690565b60006105ce610880565b6000546001600160a01b0390811691161461061e576040805162461bcd60e51b81526020600482018190526024820152600080516020610c9d833981519152604482015290519081900360640190fd5b61041782610884565b61062f610880565b6000546001600160a01b0390811691161461067f576040805162461bcd60e51b81526020600482018190526024820152600080516020610c9d833981519152604482015290519081900360640190fd5b60055460ff161561068f57600080fd5b600280546001600160a01b039586166001600160a01b0319918216179091556001805494861694821694909417845560049290925560038054919094169116179091556005805460ff19169091179055565b3360009081526006602052604081205460ff1661073b576040805162461bcd60e51b8152602060048201526013602482015272213abcb2b9103737ba1030b8383937bb32b21760691b604482015290519081900360640190fd5b600061074683610905565b600354600154919250610768916001600160a01b03908116913391168661091c565b60025461077f906001600160a01b031633836108ae565b50600192915050565b610790610880565b6000546001600160a01b039081169116146107e0576040805162461bcd60e51b81526020600482018190526024820152600080516020610c9d833981519152604482015290519081900360640190fd5b6001600160a01b0381166108255760405162461bcd60e51b8152600401808060200182810382526026815260200180610c566026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b3390565b6001600160a01b03166000908152600660205260409020805460ff19166001179081905560ff1690565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b17905261090090849061097c565b505050565b600061041760045483610a2d90919063ffffffff16565b604080516001600160a01b0380861660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b17905261097690859061097c565b50505050565b60606109d1826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316610a8d9092919063ffffffff16565b805190915015610900578080602001905160208110156109f057600080fd5b50516109005760405162461bcd60e51b815260040180806020018281038252602a815260200180610cbd602a913960400191505060405180910390fd5b600082610a3c57506000610417565b82820282848281610a4957fe5b0414610a865760405162461bcd60e51b8152600401808060200182810382526021815260200180610c7c6021913960400191505060405180910390fd5b9392505050565b6060610a9c8484600085610aa4565b949350505050565b6060610aaf85610c4f565b610b00576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015290519081900360640190fd5b60006060866001600160a01b031685876040518082805190602001908083835b60208310610b3f5780518252601f199092019160209182019101610b20565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d8060008114610ba1576040519150601f19603f3d011682016040523d82523d6000602084013e610ba6565b606091505b50915091508115610bba579150610a9c9050565b805115610bca5780518082602001fd5b8360405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610c14578181015183820152602001610bfc565b50505050905090810190601f168015610c415780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b3b15159056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f774f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65725361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564a2646970667358221220ffffdd922651b36265c9f8d50f0268cc0d3e9ed266c71ebae5fedc2e6907b5b664736f6c63430007050033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100ea5760003560e01c806349df728c1161008c578063a5f523d411610066578063a5f523d41461023c578063be20309414610262578063c3664cdc1461029e578063f2fde38b146102bb576100ea565b806349df728c14610204578063715018a61461022a5780638da5cb5b14610234576100ea565b80633ca5b234116100c85780633ca5b2341461015e57806340edcbdd1461016657806341c91cb51461018c578063467d5fcb146101fc576100ea565b80630b2772a4146100ef578063158ef93e146101135780631d07b0961461012f575b600080fd5b6100f76102e1565b604080516001600160a01b039092168252519081900360200190f35b61011b6102f0565b604080519115158252519081900360200190f35b61014c6004803603602081101561014557600080fd5b50356102f9565b60408051918252519081900360200190f35b6100f761035c565b61011b6004803603602081101561017c57600080fd5b50356001600160a01b031661036b565b61014c600480360360208110156101a257600080fd5b8101906020810181356401000000008111156101bd57600080fd5b8201836020820111156101cf57600080fd5b803590602001918460208302840111640100000000831117156101f157600080fd5b509092509050610380565b61014c61041d565b61011b6004803603602081101561021a57600080fd5b50356001600160a01b0316610423565b610232610513565b005b6100f76105b5565b61011b6004803603602081101561025257600080fd5b50356001600160a01b03166105c4565b6102326004803603608081101561027857600080fd5b506001600160a01b03813581169160208101358216916040820135916060013516610627565b61011b600480360360208110156102b457600080fd5b50356106e1565b610232600480360360208110156102d157600080fd5b50356001600160a01b0316610788565b6002546001600160a01b031681565b60055460ff1681565b6000610303610880565b6000546001600160a01b03908116911614610353576040805162461bcd60e51b81526020600482018190526024820152600080516020610c9d833981519152604482015290519081900360640190fd5b50600481905590565b6001546001600160a01b031681565b60066020526000908152604090205460ff1681565b600061038a610880565b6000546001600160a01b039081169116146103da576040805162461bcd60e51b81526020600482018190526024820152600080516020610c9d833981519152604482015290519081900360640190fd5b60005b80831115610412576104098484838181106103f457fe5b905060200201356001600160a01b0316610884565b506001016103dd565b508190505b92915050565b60045481565b600061042d610880565b6000546001600160a01b0390811691161461047d576040805162461bcd60e51b81526020600482018190526024820152600080516020610c9d833981519152604482015290519081900360640190fd5b61050b33836001600160a01b03166370a08231306040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b1580156104ce57600080fd5b505afa1580156104e2573d6000803e3d6000fd5b505050506040513d60208110156104f857600080fd5b50516001600160a01b03851691906108ae565b506001919050565b61051b610880565b6000546001600160a01b0390811691161461056b576040805162461bcd60e51b81526020600482018190526024820152600080516020610c9d833981519152604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031690565b60006105ce610880565b6000546001600160a01b0390811691161461061e576040805162461bcd60e51b81526020600482018190526024820152600080516020610c9d833981519152604482015290519081900360640190fd5b61041782610884565b61062f610880565b6000546001600160a01b0390811691161461067f576040805162461bcd60e51b81526020600482018190526024820152600080516020610c9d833981519152604482015290519081900360640190fd5b60055460ff161561068f57600080fd5b600280546001600160a01b039586166001600160a01b0319918216179091556001805494861694821694909417845560049290925560038054919094169116179091556005805460ff19169091179055565b3360009081526006602052604081205460ff1661073b576040805162461bcd60e51b8152602060048201526013602482015272213abcb2b9103737ba1030b8383937bb32b21760691b604482015290519081900360640190fd5b600061074683610905565b600354600154919250610768916001600160a01b03908116913391168661091c565b60025461077f906001600160a01b031633836108ae565b50600192915050565b610790610880565b6000546001600160a01b039081169116146107e0576040805162461bcd60e51b81526020600482018190526024820152600080516020610c9d833981519152604482015290519081900360640190fd5b6001600160a01b0381166108255760405162461bcd60e51b8152600401808060200182810382526026815260200180610c566026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b3390565b6001600160a01b03166000908152600660205260409020805460ff19166001179081905560ff1690565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b17905261090090849061097c565b505050565b600061041760045483610a2d90919063ffffffff16565b604080516001600160a01b0380861660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b17905261097690859061097c565b50505050565b60606109d1826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316610a8d9092919063ffffffff16565b805190915015610900578080602001905160208110156109f057600080fd5b50516109005760405162461bcd60e51b815260040180806020018281038252602a815260200180610cbd602a913960400191505060405180910390fd5b600082610a3c57506000610417565b82820282848281610a4957fe5b0414610a865760405162461bcd60e51b8152600401808060200182810382526021815260200180610c7c6021913960400191505060405180910390fd5b9392505050565b6060610a9c8484600085610aa4565b949350505050565b6060610aaf85610c4f565b610b00576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015290519081900360640190fd5b60006060866001600160a01b031685876040518082805190602001908083835b60208310610b3f5780518252601f199092019160209182019101610b20565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d8060008114610ba1576040519150601f19603f3d011682016040523d82523d6000602084013e610ba6565b606091505b50915091508115610bba579150610a9c9050565b805115610bca5780518082602001fd5b8360405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610c14578181015183820152602001610bfc565b50505050905090810190601f168015610c415780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b3b15159056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f774f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65725361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564a2646970667358221220ffffdd922651b36265c9f8d50f0268cc0d3e9ed266c71ebae5fedc2e6907b5b664736f6c63430007050033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 388,
        "contract": "contracts/vested/PreTaoSales.sol:PreTaoSales",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 1221,
        "contract": "contracts/vested/PreTaoSales.sol:PreTaoSales",
        "label": "busd",
        "offset": 0,
        "slot": "1",
        "type": "t_contract(IERC20)553"
      },
      {
        "astId": 1223,
        "contract": "contracts/vested/PreTaoSales.sol:PreTaoSales",
        "label": "pTao",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(IERC20)553"
      },
      {
        "astId": 1225,
        "contract": "contracts/vested/PreTaoSales.sol:PreTaoSales",
        "label": "_saleProceedsAddress",
        "offset": 0,
        "slot": "3",
        "type": "t_address"
      },
      {
        "astId": 1227,
        "contract": "contracts/vested/PreTaoSales.sol:PreTaoSales",
        "label": "pTaoPrice",
        "offset": 0,
        "slot": "4",
        "type": "t_uint256"
      },
      {
        "astId": 1229,
        "contract": "contracts/vested/PreTaoSales.sol:PreTaoSales",
        "label": "initialized",
        "offset": 0,
        "slot": "5",
        "type": "t_bool"
      },
      {
        "astId": 1233,
        "contract": "contracts/vested/PreTaoSales.sol:PreTaoSales",
        "label": "approvedBuyers",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_address,t_bool)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(IERC20)553": {
        "encoding": "inplace",
        "label": "contract IERC20",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}